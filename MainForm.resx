<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>